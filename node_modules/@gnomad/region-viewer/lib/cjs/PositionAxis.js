"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PositionAxis = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var PositionAxis = function PositionAxis(_ref) {
  var scalePosition = _ref.scalePosition,
    width = _ref.width;
  var height = 15;
  var numIntervals = Math.min(10, Math.floor(width / 90));
  var tickInterval = width / numIntervals;
  var ticks = _toConsumableArray(Array(numIntervals - 1)).map(function (_, i) {
    return tickInterval * (i + 1);
  });
  return /*#__PURE__*/_react.default.createElement("svg", {
    height: height,
    width: width
  }, /*#__PURE__*/_react.default.createElement("line", {
    x1: 0,
    y1: height,
    x2: width,
    y2: height,
    stroke: "black",
    strokeWidth: 2
  }), /*#__PURE__*/_react.default.createElement("g", null, /*#__PURE__*/_react.default.createElement("line", {
    x1: 0,
    y1: height,
    x2: 0,
    y2: height - 5,
    stroke: "black",
    strokeWidth: 2
  }), /*#__PURE__*/_react.default.createElement("text", {
    x: 0,
    y: height - 7,
    textAnchor: "start",
    style: {
      fontSize: '10px'
    }
  }, scalePosition.invert(0).toLocaleString())), ticks.map(function (x) {
    return /*#__PURE__*/_react.default.createElement("g", {
      key: x
    }, /*#__PURE__*/_react.default.createElement("line", {
      x1: x,
      y1: height,
      x2: x,
      y2: height - 5,
      stroke: "black",
      strokeWidth: 1
    }), /*#__PURE__*/_react.default.createElement("text", {
      x: x,
      y: height - 7,
      textAnchor: "middle",
      style: {
        fontSize: '10px'
      }
    }, scalePosition.invert(x).toLocaleString()));
  }), /*#__PURE__*/_react.default.createElement("g", null, /*#__PURE__*/_react.default.createElement("line", {
    x1: width,
    y1: height,
    x2: width,
    y2: height - 5,
    stroke: "black",
    strokeWidth: 2
  }), /*#__PURE__*/_react.default.createElement("text", {
    x: width,
    y: height - 7,
    textAnchor: "end",
    style: {
      fontSize: '10px'
    }
  }, scalePosition.invert(width).toLocaleString())));
};
exports.PositionAxis = PositionAxis;
PositionAxis.propTypes = {
  scalePosition: _propTypes.default.func.isRequired,
  width: _propTypes.default.number.isRequired
};