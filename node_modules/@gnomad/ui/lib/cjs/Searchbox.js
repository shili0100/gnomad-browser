"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Searchbox = void 0;
var _lodash = _interopRequireDefault(require("lodash.debounce"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _reactAutocomplete = _interopRequireDefault(require("react-autocomplete"));
var _Combobox = require("./Combobox");
var _excluded = ["id", "ref"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /* eslint-disable max-classes-per-file */
var SearchboxInput = (0, _styledComponents.default)(_Combobox.Input).withConfig({
  displayName: "Searchbox__SearchboxInput",
  componentId: "sc-kp6w3x-0"
})(["", ";"], function (props) {
  return props.hasResults ? '' : 'background-image: none';
});
var PlaceholderItem = (0, _styledComponents.default)(_Combobox.Item).withConfig({
  displayName: "Searchbox__PlaceholderItem",
  componentId: "sc-kp6w3x-1"
})(["color:rgba(0,0,0,0.5);"]);
var CancelablePromise = /*#__PURE__*/function () {
  function CancelablePromise(executor) {
    var _this = this;
    _classCallCheck(this, CancelablePromise);
    _defineProperty(this, "isCanceled", false);
    this.promise = new Promise(function (resolve, reject) {
      var wrappedResolve = function wrappedResolve(value) {
        if (!_this.isCanceled) {
          resolve(value);
        }
      };
      var wrappedReject = function wrappedReject(value) {
        if (!_this.isCanceled) {
          reject(value);
        }
      };
      return executor(wrappedResolve, wrappedReject);
    });
  }
  _createClass(CancelablePromise, [{
    key: "cancel",
    value: function cancel() {
      this.isCanceled = true;
    }
  }, {
    key: "then",
    value: function then(onFulfilled, onRejected) {
      return this.promise.then(onFulfilled, onRejected);
    }
  }]);
  return CancelablePromise;
}();
var renderInput = function renderInput(props) {
  // eslint-disable-next-line react/prop-types
  var id = props.id,
    ref = props.ref,
    rest = _objectWithoutProperties(props, _excluded);
  return /*#__PURE__*/_react.default.createElement(SearchboxInput, _extends({}, rest, {
    id: id,
    ref: ref
  }));
};
var renderItem = function renderItem(item, isHighlighted) {
  return /*#__PURE__*/_react.default.createElement(_Combobox.Item, {
    key: item.value,
    "data-testid": "searchbox-menu-item",
    isHighlighted: isHighlighted
  }, item.label);
};
var Searchbox = /*#__PURE__*/function (_Component) {
  _inherits(Searchbox, _Component);
  var _super = _createSuper(Searchbox);
  function Searchbox() {
    var _this2;
    _classCallCheck(this, Searchbox);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this2), "state", {
      error: null,
      inputValue: '',
      isFetching: false,
      isOpen: false,
      options: []
    });
    /* eslint-disable react/sort-comp */
    _defineProperty(_assertThisInitialized(_this2), "selectOnSearchResponse", false);
    /* eslint-enable react/sort-comp */
    _defineProperty(_assertThisInitialized(_this2), "fetchSearchResults", (0, _lodash.default)(function (query) {
      var _this2$props = _this2.props,
        fetchSearchResults = _this2$props.fetchSearchResults,
        onSelect = _this2$props.onSelect;
      if (_this2.searchRequest) {
        _this2.searchRequest.cancel();
      }
      _this2.searchRequest = new CancelablePromise(function (resolve, reject) {
        fetchSearchResults(query).then(resolve, reject);
      });
      _this2.searchRequest.then(function (results) {
        _this2.setState({
          isFetching: false,
          options: results
        });
        if (_this2.selectOnSearchResponse && results.length > 0) {
          onSelect(results[0].value, results[0]);
        }
        _this2.selectOnSearchResponse = false;
      }, function (error) {
        _this2.setState({
          isFetching: false,
          error: error
        });
      });
    }, 400));
    _defineProperty(_assertThisInitialized(_this2), "onChange", function (e, inputValue) {
      _this2.setState({
        inputValue: inputValue
      }, _this2.updateResults.bind(_assertThisInitialized(_this2)));
    });
    _defineProperty(_assertThisInitialized(_this2), "onKeyDown", function (e) {
      if (e.key === 'Enter') {
        _this2.selectOnSearchResponse = true;
      }
    });
    _defineProperty(_assertThisInitialized(_this2), "onMenuVisibilityChange", function (isOpen) {
      _this2.setState(function (state) {
        return {
          isOpen: isOpen || state.isFetching
        };
      });
    });
    _defineProperty(_assertThisInitialized(_this2), "onSelect", function (value, item) {
      var onSelect = _this2.props.onSelect;
      _this2.setState({
        inputValue: item.label
      });
      onSelect(item.value, item);
    });
    _defineProperty(_assertThisInitialized(_this2), "renderMenu", function (items, inputValue, style) {
      var _this2$state = _this2.state,
        error = _this2$state.error,
        isFetching = _this2$state.isFetching;
      var menuContent;
      if (inputValue === '') {
        return /*#__PURE__*/_react.default.createElement("div", null);
      }
      if (items.length === 0) {
        if (isFetching) {
          menuContent = /*#__PURE__*/_react.default.createElement(PlaceholderItem, {
            "data-testid": "searchbox-searching"
          }, "Searching...");
        } else if (error) {
          menuContent = /*#__PURE__*/_react.default.createElement(PlaceholderItem, {
            "data-testid": "searchbox-error"
          }, "Unable to get results");
        } else {
          menuContent = /*#__PURE__*/_react.default.createElement(PlaceholderItem, {
            "data-testid": "searchbox-no-results"
          }, "No results found");
        }
      } else {
        menuContent = items;
      }
      return /*#__PURE__*/_react.default.createElement("div", {
        style: _objectSpread(_objectSpread({}, style), _Combobox.menuStyle)
      }, menuContent);
    });
    return _this2;
  }
  _createClass(Searchbox, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.searchRequest) {
        this.searchRequest.cancel();
      }
      this.fetchSearchResults.cancel();
    }
  }, {
    key: "updateResults",
    value: function updateResults() {
      var inputValue = this.state.inputValue;
      var trimmedValue = inputValue.trim();

      // Clear current search results. This prevents pressing "Enter" while new results are loading
      // from selecting the top result from the previous query.
      this.setState({
        error: null,
        options: []
      });
      this.selectOnSearchResponse = false;

      // Set isFetching here instead of in fetchSearchResults so that the "Searching..." message's
      // appearance is not delayed by the debounce on fetchSearchResults
      if (trimmedValue !== '') {
        this.setState({
          isFetching: true
        });
        this.fetchSearchResults(trimmedValue);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        id = _this$props.id,
        placeholder = _this$props.placeholder,
        width = _this$props.width;
      var _this$state = this.state,
        inputValue = _this$state.inputValue,
        isOpen = _this$state.isOpen,
        options = _this$state.options;
      return /*#__PURE__*/_react.default.createElement(_reactAutocomplete.default
      // Returning the input value for every item's display value makes Autocomplete's autohighlight
      // work for results whose display value doesn't match the input text (for example, when
      // normalized variant IDs are returned in search results).
      // https://github.com/reactjs/react-autocomplete/blob/41388f7/lib/Autocomplete.js#L404-L410
      , {
        getItemValue: function getItemValue() {
          return inputValue;
        },
        inputProps: {
          'data-testid': 'searchbox-input',
          hasResults: options.length > 0,
          id: id,
          placeholder: placeholder,
          onKeyDown: this.onKeyDown
        },
        items: options,
        open: isOpen,
        renderInput: renderInput,
        renderItem: renderItem,
        renderMenu: this.renderMenu,
        shouldItemRender: function shouldItemRender() {
          return true;
        },
        value: inputValue,
        wrapperStyle: {
          display: 'inline-block',
          width: width
        },
        onChange: this.onChange,
        onMenuVisibilityChange: this.onMenuVisibilityChange,
        onSelect: this.onSelect
      });
    }
  }]);
  return Searchbox;
}(_react.Component);
exports.Searchbox = Searchbox;
_defineProperty(Searchbox, "propTypes", {
  fetchSearchResults: _propTypes.default.func.isRequired,
  id: _propTypes.default.string,
  onSelect: _propTypes.default.func.isRequired,
  placeholder: _propTypes.default.string,
  width: _propTypes.default.string
});
_defineProperty(Searchbox, "defaultProps", {
  id: undefined,
  placeholder: undefined,
  width: undefined
});